websocket driver might not need wss ever

lzw compression? (algorithm behind gzip)

send only required dictionary keys?? -- nah, too much hassle

add versioning to containers / dictionary, instead of checking whether changes has Object.keys().length > 0 -- fine for now

caching msgpack messages -- possible but needs more metadata




// old WebSocketDriverServer code for install
  _getSymbols(ws) {
    ws.addEventListener('message', () => {})
    const symbolRetrieval = ws.listeners('message')[0]
    let listenerSymbol
    let attributeSymbol
    for (let s of Object.getOwnPropertySymbols(symbolRetrieval)) {
      if (s.toString() === 'Symbol(kListener)') {listenerSymbol = s}
      else if (s.toString() === 'Symbol(kIsForOnEventAttribute)') {attributeSymbol = s}
    }

    return {listenerSymbol, attributeSymbol}
  }

 // Test for nested msgpackr messages
const main = {}
// const a = {a: 40, b: 15, c:'lolec'}
// const b = {xasd: 'adaw', asddas: 9999, ugnaikg: 'asdniasdn'}
// main.a = a
// main.b = b
// const mainP = pack(main)
// const mainN = pack({a: pack(a), b: pack(b)})
// console.log(mainP.length)
// console.log(mainN.length);
// console.log(unpack(mainP));
// console.log(unpack(mainN));
